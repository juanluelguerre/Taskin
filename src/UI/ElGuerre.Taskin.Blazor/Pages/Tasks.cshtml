@using ElGuerre.Taskin.Models
@using System.Threading.Tasks
@using ElGuerre.Taskin.Blazor.Utils

@page "/tasks/{ProjectId}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<div class="page-header">
    <h1>Tasks @(!string.IsNullOrWhiteSpace(ProjectId) ? $"for project {ProjectId}" : "")</h1>
</div>

@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table table-hover'>
        <thead>
            <tr>
                <th>Id</th>
                <th>Priority</th>
                <th>Detail</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in tasks)
            {
                <tr>
                    <td>@task.Id</td>
                    <td>@task.Priority</td>
                    <td>@task.Detail</td>
                    <td>@task.TaskType</td>
                    <td>
                        <button class="btn btn-info" onclick=@(() => UriHelper.NavigateTo($"/taskdetail/{task.Id}"))>View</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    [Parameter]
    string ProjectId { get; set; }

    TaskModel[] tasks;

    protected override async Task OnInitAsync()
    {
        string baseUrl = ServiceHelper.GetServiceUrl();
        tasks = await Http.GetJsonAsync<TaskModel[]>($"{baseUrl}/projects/{ProjectId}/tasks");
    }
}
