@using ElGuerre.Taskin.Models
@using ElGuerre.Taskin.Blazor.Shared
@using ElGuerre.Taskin.Blazor.Utils

@page "/projects"

@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<div class="page-header">
    <h1>Projects</h1>
</div>

@if (projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table table-hover'>
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Detail</th>
                <th>Type</th>
                <th>Tasks</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var proj in projects)
            {
                <tr>
                    <td>@proj.Id</td>
                    <td>@proj.Title</td>
                    <td>@proj.Detail</td>
                    <td>@proj.ProjectType</td>
                    <td>
                        <button class="btn btn-info" onclick=@(() => UriHelper.NavigateTo($"/tasks/{proj.Id}"))>View</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    ProjectModel[] projects;

    protected override async Task OnInitAsync()
    {

        string baseUrl = ServiceHelper.GetServiceUrl();
        // Inclcuide this statement in Startup to get JSon correctly:
        //      options.SerializerSettings.ContractResolver = new DefaultContractResolver();

        //Http.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        //Http.DefaultRequestHeaders.Add("Access-Control-Request-Headers", "Origin, X-Requested-With, Content-Type, Accept");
        //Http.DefaultRequestHeaders.Add("Access-Control-Request-Methods", "GET, POST, PUT, DELETE, OPTIONS");
        //Http.DefaultRequestHeaders.Add("Access-Control-Request-Credentials", "true");

        //Http.DefaultRequestHeaders.Add("mode", "no-cors");

        projects = await Http.GetJsonAsync<ProjectModel[]>($"{baseUrl}/projects");
    }
}
